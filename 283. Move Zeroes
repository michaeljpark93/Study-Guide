# Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

# Example:

# Input: [0,1,0,3,12]
# Output: [1,3,12,0,0]
# Note:

# You must do this in-place without making a copy of the array.
# Minimize the total number of operations.

# @param {Integer[]} nums
# @return {Void} Do not return anything, modify nums in-place instead.
def move_zeroes(nums)
  count = nums.count(0)
  nums.delete(0)
  count.times { nums << 0 }
end

# Time: O(n)
# Space: O(1)

#Explanation: although you could switch the instances of the 0's to the end 
#it would actually be more operations so you simply count the number of instances and add them to the end