// Given an array of integers, return indices of the two numbers such that they add up to a specific target.
// You may assume that each input would have exactly one solution, and you may not use the same element twice.

// Example:
// Given nums = [2, 7, 11, 15], target = 9,
// Because nums[0] + nums[1] = 2 + 7 = 9,
// return [0, 1].

/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
const twoSum = function (nums, target) {
  const diff = {};
  for (let i = 0; i < nums.length; i++) {
    if (diff[nums[i]] !== undefined) {
      return [diff[nums[i]], i];
    }
    diff[target - nums[i]] = i;
  }
};

# Python Solution:
class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        difference = {}
        for i in range(len(nums)):
            if nums[i] in difference:
                return difference[nums[i]], i
            else:
                difference[target - nums[i]] = i
        