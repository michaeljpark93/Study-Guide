// Given a non-negative integer numRows, generate the first numRows of Pascal's triangle.

// In Pascal's triangle, each number is the sum of the two numbers directly above it.

// Example:
// Input: 5
// Output:
// [
//      [1],
//     [1,1],
//    [1,2,1],
//   [1,3,3,1],
//  [1,4,6,4,1]
// ]

/**
 * @param {number} numRows
 * @return {number[][]}
 */
const generate = function (numRows) {
  const triangle = [];
  if (numRows > 0) {
    triangle.push([1]);
    numRows -= 1;
  }
  if (numRows > 0) {
    triangle.push([1, 1]);
    numRows -= 1;
  }

  while (numRows > 0) {
    const last = triangle[triangle.length - 1];
    const newRow = [1];
    for (let i = 0; i < last.length - 1; i++) {
      newRow.push(last[i] + last[i + 1]);
    }
    newRow.push(1);
    triangle.push(newRow);
    numRows -= 1;
  }

  return triangle;
};
