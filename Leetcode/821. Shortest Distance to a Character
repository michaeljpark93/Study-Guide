// Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.

// Example 1:

// Input: S = "loveleetcode", C = 'e'
// Output: [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]

// Note:
// S string length is in [1, 10000].
// C is a single character, and guaranteed to be in string S.
// All letters in S and C are lowercase.

/**
 * @param {string} S
 * @param {character} C
 * @return {number[]}
 */
const shortestToChar = function (S, C) {
  const answer = new Array(S.length);
  answer.fill(Number.MAX_VALUE);
  const flag = [];
  for (let i = 0; i < S.length; i++) {
    if (S[i] === C) {
      flag.push(i);
    }
  }

  for (let j = 0; j < S.length; j++) {
    if (S[j] !== C) {
      for (let k = 0; k < flag.length; k++) {
        answer[j] = Math.min(answer[j], Math.abs(flag[k] - j));
      }
    } else {
      answer[j] = 0;
    }
  }

  return answer;
};
