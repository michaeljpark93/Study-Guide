// Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).

// For example:
// Given binary tree [3,9,20,null,null,15,7],
//     3
//    / \
//   9  20
//     /  \
//    15   7
// return its zigzag level order traversal as:
// [
//   [3],
//   [20,9],
//   [15,7]
// ]

/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
const zigzagLevelOrder = function (root) {
  const result = [];
  if (!root) return result;

  function traverse(root, level) {
    if (!root) return;
    if (result[level] === undefined) {
      result[level] = [];
    }
    if (level % 2 === 0) {
      result[level].push(root.val);
    } else {
      result[level].unshift(root.val);
    }
    traverse(root.left, level + 1);
    traverse(root.right, level + 1);
  }

  traverse(root, 0);
  return result;
};
