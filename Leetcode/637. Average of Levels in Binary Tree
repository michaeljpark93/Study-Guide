// Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.
// Example 1:
// Input:
//     3
//    / \
//   9  20
//     /  \
//    15   7
// Output: [3, 14.5, 11]
// Explanation:
// The average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].
// Note:
// The range of node's value is in the range of 32-bit signed integer.

/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[]}
 */
const averageOfLevels = function (root) {
  const count = [];
  const answer = [];

  const average = function (root, level = 0) {
    if (!root) return;
    if (!answer[level]) answer[level] = 0;
    answer[level] += root.val;
    if (!count[level]) count[level] = 0;
    count[level] += 1;
    average(root.left, level + 1);
    average(root.right, level + 1);
  };

  average(root, 0);
  const result = answer.map((sum, level) => sum / count[level]);
  return result;
};
