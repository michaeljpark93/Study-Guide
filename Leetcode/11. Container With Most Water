// Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.
// Note: You may not slant the container and n is at least 2.

// Example:
// Input: [1,8,6,2,5,4,8,3,7]
// Output: 49

/**
 * @param {number[]} height
 * @return {number}
 */
const maxArea = function (height) {
  let lo = 0;
  let hi = height.length - 1;
  let area = 0;
  while (lo < hi) {
    area = Math.max(area, (hi - lo) * Math.min(height[lo], height[hi]));
    if (height[lo] < height[hi]) {
      lo += 1;
    } else {
      hi -= 1;
    }
  }
  return area;
};
